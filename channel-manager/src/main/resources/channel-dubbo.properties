#######################################################
####  <dubbo:application/> 
#######################################################
#当前应用名称
dubbo.application.name=channel

#当前应用版本
dubbo.application.version=1.0

#应用负责人
dubbo.application.owner=jun

#组织名称(部门)
dubbo.application.organization=com.zjht.channel

#应用环境，如：develop/test/product，不同环境使用不同的缺省值，以及作为只用于开发测试功能的限制条件 
dubbo.application.environment=${ENV.APPLICATION.ENVIRONMENT}

#java字节码编译器
dubbo.application.compiler=javassist

#日志输出方式，可选：slf4j,jcl,log4j,jdk
dubbo.application.logger=slf4j

#######################################################
####  <dubbo:registry/> 
#######################################################
#dubbo在zookeeper上的根节点
dubbo.registry.group=channel

#注册中心的bean id
dubbo.registry.id=channel_zookeeper

#注册中心服务器地址，如果地址没有端口缺省为9090
#同一集群内的多个地址用逗号分隔，如：ip:port,ip:port
dubbo.registry.address=${ENV.ZK.ADDRESS}

dubbo.registry.protocol=zookeeper

#注册中心请求超时时间(毫秒) 
dubbo.registry.timeout=5000

#注册中心会话超时时间(毫秒)，用于检测提供者非正常断线后的脏数据，
#比如用心跳检测的实现，此时间就是心跳间隔，不同注册中心实现不一样。 
dubbo.registry.session=60000

#使用文件缓存注册中心地址列表及服务提供者列表
#应用重启时将基于此文件恢复
#注意：两个注册中心不能使用同一文件存储
dubbo.registry.file=

#停止时等待通知完成时间(毫秒) 
dubbo.registry.wait=0

#注册中心不存在时，是否报错 
dubbo.registry.check=true

#是否向此注册中心订阅服务，如果设为false，将只注册，不订阅
dubbo.registry.subscribe=true
#######################################################
####  <dubbo:consumer/> 
#######################################################
#负责人
dubbo.consumer.owner=jun

#组织名称(部门)
dubbo.consumer.group=com.zjht.channel

#远程服务调用超时时间(毫秒) 
dubbo.consumer.timeout=10000

#远程服务调用重试次数，不包括第一次调用，不需要重试请设为0 
dubbo.consumer.retries=0

#负载均衡策略，可选值：random,roundrobin,leastactive，分别表示：随机，轮循，最少活跃调用 
dubbo.consumer.loadbalance=leastactive

#启动时检查提供者是否存在，true报错，false忽略 
dubbo.consumer.check=false

#生成动态代理方式，可选：jdk/javassist 
dubbo.consumer.proxy=javassist

#每服务消费者每服务每方法最大并发调用数
dubbo.consumer.actives=0

#集群方式，可选：failover/failfast/failsafe/failback/forking 
dubbo.consumer.cluster=failover